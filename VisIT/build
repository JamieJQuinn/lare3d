#! /bin/sh

fmt="CFD"

version=`visit -version 2>&1 | sed 's,.* \([0-9]*\).*,\1,'`
tmpdir=.tmp

export CFLAGS="-Wno-deprecated"
export CXXFLAGS="-Wno-deprecated"

function buildit {
  rm -rf $tmpdir
  mkdir -p $tmpdir
  if [ "$version"x != x ]; then
    xml2info -clobber ${fmt}${version}.xml
    rm -rf CMake* cmake* Makefile

    if [ $version -eq 1 ]; then
      xml2makefile -clobber ${fmt}${version}.xml
      if [ "`uname -s`"x = "Darwinx" -a "`uname -m`"x = "x86_64x" ]; then
        sed 's,\(^CXXFLAGS.*\),\1 -m32 -g\
CFLAGS=$(CFLAGSORIG) -m32 -g\
PY_CXXFLAGS=-I$(TOPDIR)/include/python,;s,\(^LDFLAGS.*\),\1 -m32,' Makefile > .Makefile.tmp
        \mv -f .Makefile.tmp Makefile
      fi
    else
      xml2cmake -clobber ${fmt}${version}.xml
      for f in `grep -w INCLUDE CMakeLists.txt | cut -f2 -d\"`; do
        base=`basename $f`
        sed 's,/usr/lib/libmpi[^;]*.dylib;,,g;s,/usr/lib/libopen-.*.dylib,,g' $f > $tmpdir/$base
        sed 's,INCLUDE("'$f',INCLUDE("'$tmpdir/$base',' \
            CMakeLists.txt > $tmpdir/tmp
        mv $tmpdir/tmp CMakeLists.txt
      done
      cmake -DCMAKE_BUILD_TYPE=Debug .
    fi

    make clean
    make 2> $tmpdir/err
  else
    echo "Unable to build. Please add visit to your \$PATH"
  fi
}


buildit

if [ $? -ne 0 ]; then
  mpi=0
  grep -w mpi.h $tmpdir/err > /dev/null && mpi=1
  grep -w lmpi $tmpdir/err > /dev/null && mpi=1
  grep libmpi $tmpdir/err > /dev/null && mpi=1
  if [ $mpi -ne 0 ]; then
    echo "Trying again with mpicc"
    export CC=mpicc
    export CXX=mpicxx
    buildit
  else
    cat $tmpdir/err
  fi
fi

rm -rf $tmpdir
